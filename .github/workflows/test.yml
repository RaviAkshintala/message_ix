name: Test

on: [push,pull_request]

 

# Cancel previous runs that have not completed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  # Version used until 2024-11-20; disabled
  # GAMS_VERSION: 29.1.0
  # First version including a macOS arm64 distribution
  GAMS_VERSION: 43.4.1

  # See description in lint.yml
  depth: 100

jobs:
  pytest:
    if: >
      github.event_name != 'workflow_run' ||
      github.event.workflow_run.conclusion == 'success'

    runs-on: ubuntu-22.04
    name: Ubuntu-22.04-py${{ matrix.python-version }}

    steps:
    - name: Check out message_ix
      if: github.event_name != 'workflow_run'
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ env.depth }}

    - name: Check out message_ix (workflow_run)
      if: github.event_name == 'workflow_run'
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ env.depth }}
        repository: ${{ github.event.workflow_run.repository }}
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Fetch tags (for setuptools-scm)
      run: git fetch --tags --depth=${{ env.depth }}

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip
        cache-dependency-path: "**/pyproject.toml"

    - name: Cache GAMS installer and R packages
      uses: actions/cache@v4
      with:
        path: |
          gams
        key: ubuntu-22.04-gams${{ env.GAMS_VERSION }}
        restore-keys: |
          ubuntu-22.04-

    - uses: iiasa/actions/setup-gams@main
      with:
        version: ${{ env.GAMS_VERSION }}
        license: ${{ secrets.GAMS_LICENSE }}

    - name: Install Python package and dependencies
      run: |
        pip install --upgrade "ixmp @ git+https://github.com/iiasa/ixmp.git@main"
        pip install .[tests]

        # TEMPORARY With Python 3.13 pyam-iamc resolves to 1.3.1, which in turn
        # limits pint < 0.17. Override.
        pip install --upgrade pint

    - name: Run test suite using pytest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pytest message_ix \
          -m "not nightly and not tutorial" \
          -rA --verbose --color=yes --durations=20 \
          --cov-report=xml \
          --numprocesses=auto --dist=loadgroup
      shell: bash

    - name: Upload test coverage to Codecov.io
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  tutorials:
    if: >
      github.event_name != 'workflow_run' ||
      github.event.workflow_run.conclusion == 'success'

    runs-on: ubuntu-22.04
    name: Ubuntu-22.04 tutorials

    steps:
    - name: Check out message_ix
      if: github.event_name != 'workflow_run'
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ env.depth }}

    - name: Check out message_ix (workflow_run)
      if: github.event_name == 'workflow_run'
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.workflow_run.repository }}
        ref: ${{ github.event.workflow_run.head_branch }}

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip
        cache-dependency-path: "**/pyproject.toml"

    - name: Set RETICULATE_PYTHON
      run: echo "RETICULATE_PYTHON=$pythonLocation" >> "$GITHUB_ENV"
      shell: bash

    - uses: r-lib/actions/setup-r@v2
      id: setup-r
      with:
        windows-path-include-rtools: false

    - name: Cache GAMS installer and R packages
      uses: actions/cache@v4
      with:
        path: |
          gams
          ${{ env.R_LIBS_USER }}
        key: tutorial-ubuntu-22.04-gams${{ env.GAMS_VERSION }}-R${{ steps.setup-r.outputs.installed-r-version }}
        restore-keys: |
          tutorial-ubuntu-22.04-gams${{ env.GAMS_VERSION }}-
          tutorial-ubuntu-22.04-

    - uses: iiasa/actions/setup-gams@main
      with:
        version: ${{ env.GAMS_VERSION }}
        license: ${{ secrets.GAMS_LICENSE }}

    - name: Install Python package and dependencies
      run: |
        pip install --upgrade "ixmp @ git+https://github.com/iiasa/ixmp.git@main"
        pip install .[tests]

        # TEMPORARY With Python 3.13 pyam-iamc resolves to 1.3.1, which in turn
        # limits pint < 0.17. Override.
        pip install --upgrade pint

    - name: Install R dependencies and tutorial requirements
      run: |
        install.packages("remotes")
        remotes::install_cran(
          c("dplyr", "IRkernel", "reticulate"),
          dependencies = TRUE,
        )
        IRkernel::installspec()
      shell: Rscript {0}

    - name: Run test suite using pytest
      run: |
        pytest message_ix \
          -m "tutorial" \
          -rA --verbose --color=yes --durations=20 \
          --cov-report=xml \
          --numprocesses=auto --dist=loadgroup
      shell: bash

    - name: Upload test coverage to Codecov.io
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  pre-commit:
    name: Code quality

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Force recreation of pre-commit virtual environment for mypy
      if: github.event_name == 'schedule'
      run: gh cache list -L 999 | cut -f2 | grep pre-commit | xargs -I{} gh cache delete "{}" || true
      env: { GH_TOKEN: "${{ github.token }}" }

    - uses: pre-commit/action@v3.0.1
